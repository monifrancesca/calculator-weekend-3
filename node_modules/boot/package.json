{
  "_args": [
    [
      "boot",
      "/Users/newmac/Dev/Prime_Iota/calculator-weekend3"
    ]
  ],
  "_from": "boot@latest",
  "_id": "boot@0.8.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/boot",
  "_phantomChildren": {},
  "_requested": {
    "name": "boot",
    "raw": "boot",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/boot/-/boot-0.8.2.tgz",
  "_shasum": "c04fdba2da1fccbc5cd41796d50100e9fb4bdb24",
  "_shrinkwrap": null,
  "_spec": "boot",
  "_where": "/Users/newmac/Dev/Prime_Iota/calculator-weekend3",
  "author": {
    "email": "raynos2@gmail.com",
    "name": "Raynos"
  },
  "browserify": "browser.js",
  "bugs": {
    "email": "raynos2@gmail.com",
    "url": "https://github.com/Raynos/boot/issues"
  },
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "dependencies": {
    "backoff": "~0.3.0",
    "duplexer": "~0.0.2",
    "mux-demux-shoe": "~0.2.4",
    "pause-stream": "0.0.3",
    "through": "~0.1.4"
  },
  "description": "An automatic reconnect mux-demux-shoe",
  "devDependencies": {
    "browserify-server": "~0.2.0",
    "lazynode": "~0.1.0",
    "multi-channel-mdm": "~0.5.0",
    "node-uuid": "~1.3.3",
    "upnode": "~0.4.1"
  },
  "directories": {},
  "dist": {
    "shasum": "c04fdba2da1fccbc5cd41796d50100e9fb4bdb24",
    "tarball": "http://registry.npmjs.org/boot/-/boot-0.8.2.tgz"
  },
  "homepage": "https://github.com/Raynos/boot",
  "keywords": [],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/boot/raw/master/LICENSE"
    }
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "raynos",
      "email": "raynos2@gmail.com"
    }
  ],
  "name": "boot",
  "optionalDependencies": {},
  "readme": "# boot\n\nAn automatic reconnect mux-demux-shoe\n\nThe mdm connection you get from shoe will magically handle reconnection\nlogic for you under the hood. You just play with streams\n\n## Client Example\n\n``` js\nvar boot = require('boot')\n    , mdm = boot(\"/boot\")\n\nvar one = mdm.createStream(\"one\")\n\none.on(\"data\", console.log.bind(console, \"client\"))\n\none.write(\"hello world\")\n```\n\n## Server Example\n\n``` js\nvar boot = require(\"boot\")\n    , through = require(\"through\")\n    , echoStream = through()\n\nvar sock = boot(function (stream) {\n    // stream from MuxDemux with the meta property set\n    if (stream.meta === \"one\") {\n        stream.on(\"data\", console.log.bind(console, \"server\"))\n        stream.pipe(echoStream, { end: false }).pipe(stream)\n    }\n})\n\nsock.install(server, \"/boot\")\n```\n\n## Installation\n\n`npm install boot`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Raynos/boot.png\n  [2]: http://travis-ci.org/Raynos/boot",
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/boot.gitn.git"
  },
  "scripts": {},
  "version": "0.8.2"
}
